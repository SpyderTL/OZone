<?xml version="1.0" encoding="utf-8"?>

<scope
	xmlns="http://metalx.org/Program"
	xmlns:cpu="http://metalx.org/Mos/6502/Operators"
	xmlns:vid="http://metalx.org/Commodore64/Video"
	xmlns:sys="http://metalx.org/Commodore64/System"
	xmlns:key="http://metalx.org/Commodore64/Keyboard"
	xmlns:kernel="http://metalx.org/Commodore64/Kernel"
	xmlns:color="http://metalx.org/Commodore64/Color"
	xmlns:mem="http://metalx.org/6502/Functions/Memory"
	xmlns:str="http://metalx.org/6502/Functions/String"
	xmlns:mm="http://metalx.org/6502/Functions/MemoryManager"
	xmlns:clsf="http://metalx.org/C64/Functions/Class"
	xmlns:cls="http://metalx.org/Class"
	xmlns:scr="http://metalx.org/x16Console/Functions/Screen"
	xmlns:ascii="http://metalx.org/Ansi/Ascii"
	xmlns:var="http://metalx.org/Variable"
	xmlns:int="http://metalx.org/6502/Functions/Integer">

	<!--Hardware Registers-->
	<label id="VideoAddressLow" offset="9f20"/>
	<label id="VideoAddressMid" offset="9f21"/>
	<label id="VideoAddressHigh" offset="9f22"/>
	<label id="VideoData0" offset="9f23"/>
	<label id="VideoData1" offset="9f24"/>
	<label id="VideoControl" offset="9f25"/>
	<label id="VideoInterruptEnable" offset="9f26"/>
	<label id="VideoInterruptStatus" offset="9f27"/>

	<label id="InterfaceDirection0" offset="9f60"/>
	<label id="InterfaceData0" offset="9f61"/>
	<label id="InterfaceDirection1" offset="9f70"/>
	<label id="InterfaceData1" offset="9f71"/>

	<label id="keys" offset="9e00"/>

	<cpu:SetInterruptDisableFlag/>

	<!--Install Interrupt Handlers-->
	<cpu:CopyImmediate8ToXIndex/>
	<addressOf ref="interruptTable" type="Absolute16Low8"/>

	<cpu:CopyImmediate8ToYIndex/>
	<addressOf ref="interruptTable" type="Absolute16High8"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="System.SetInterruptTable" type="Absolute16"/>

	<!--Create Input Buffer-->
	<cpu:CopyImmediate8ToAccumulator/>
	<hex>00</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16"/>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16" offset="2"/>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16" offset="3"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<hex>01</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16" offset="1"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Create" type="Absolute16"/>

	<int:Copy source="String32.Address" destination="buffer"/>

	<!--Create Token Buffer-->
	<cpu:CopyImmediate8ToAccumulator/>
	<hex>00</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16"/>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16" offset="2"/>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16" offset="3"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<hex>01</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="String32.Length" type="Absolute16" offset="1"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Create" type="Absolute16"/>

	<int:Copy source="String32.Address" destination="Command.Token"/>

	<!--Clear Screen-->
	<scope>
		<cpu:CopyImmediate8ToAccumulator/>
		<hex>10</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressLow" type="Absolute16"/>

		<cpu:CopyImmediate8ToYIndex/>
		<byte>61</byte>

		<label id="loopY"/>

		<cpu:CopyImmediate8ToXIndex/>
		<byte>128</byte>

		<label id="loopX"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<ascii:Space/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoData0" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>01</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoData0" type="Absolute16"/>

		<cpu:DecrementXIndex/>

		<cpu:BranchToRelative8IfNotZero/>
		<addressOf ref="loopX" type="Relative8"/>

		<cpu:DecrementYIndex/>

		<cpu:BranchToRelative8IfNotZero/>
		<addressOf ref="loopY" type="Relative8"/>
	</scope>

	<!--Load ASCII Character Set-->
	<scope>
		<cpu:CopyImmediate8ToAccumulator/>
		<byte>6</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<hex>9f60</hex>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>10</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>f8</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressLow" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>02</hex>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>c8</hex>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>03</hex>

		<cpu:CopyImmediate8ToYIndex/>
		<byte>128</byte>

		<label id="loopY"/>

		<cpu:CopyImmediate8ToXIndex/>
		<byte>8</byte>

		<label id="loopX"/>

		<!--<cpu:CopyImmediate8ToAccumulator/>
		<ascii:Space/>-->

		<cpu:CopyYIndexToImmediate8Address/>
		<hex>04</hex>

		<cpu:CopyImmediate8ToYIndex/>
		<byte>0</byte>

		<cpu:CopyImmediate8PointerPlusYIndexAddressToAccumulator/>
		<hex>02</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoData0" type="Absolute16"/>

		<cpu:CopyImmediate8AddressToYIndex/>
		<hex>04</hex>

		<cpu:ClearCarryFlag/>

		<cpu:CopyImmediate8AddressToAccumulator/>
		<hex>02</hex>

		<cpu:AddImmediate8ToAccumulator/>
		<hex>01</hex>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>02</hex>

		<cpu:CopyImmediate8AddressToAccumulator/>
		<hex>03</hex>

		<cpu:AddImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>03</hex>

		<cpu:DecrementXIndex/>

		<cpu:BranchToRelative8IfNotZero/>
		<addressOf ref="loopX" type="Relative8"/>

		<cpu:DecrementYIndex/>

		<cpu:BranchToRelative8IfNotZero/>
		<addressOf ref="loopY" type="Relative8"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<hex>9f60</hex>
	</scope>

	<!--Reset Cursor-->
	<cpu:CopyImmediate8ToAccumulator/>
	<hex>20</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="VideoAddressHigh" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<hex>00</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="VideoAddressMid" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<hex>00</hex>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="VideoAddressLow" type="Absolute16"/>

	<!--Create Root Dictionary-->
	<int:Copy value="8" destination="Dictionary32.Length"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Dictionary32.Create" type="Absolute16"/>

	<!--Test dictionary entries-->
	<int:Copy value="8" destination="String32.Length"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Create" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<string>a</string>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Append" type="Absolute16"/>

	<int:Copy source="String32.Address" destination="Dictionary32.Key"/>

	<int:Copy value="8" destination="String32.Length"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Create" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<string>b</string>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Append" type="Absolute16"/>

	<int:Copy source="String32.Address" destination="Object32.Address"/>

	<int:Copy value="5" destination="Object32.Length"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<byte>3</byte>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Type" type="Absolute16"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Object32.Create" type="Absolute16"/>

	<int:Copy source="Object32.Address" destination="Dictionary32.Value"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Dictionary32.Append" type="Absolute16"/>

	<!--Test dictionary entries-->
	<int:Copy value="8" destination="String32.Length"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Create" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<string>b</string>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Append" type="Absolute16"/>

	<int:Copy source="String32.Address" destination="Dictionary32.Key"/>
	
	<cpu:CopyImmediate8ToAccumulator/>
	<addressOf ref="test" type="Absolute16Low8"/>
	
	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Address" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<addressOf ref="test" type="Absolute16High8"/>
	
	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Address" type="Absolute16" offset="1"/>
	
	<cpu:CopyImmediate8ToAccumulator/>
	<hex>00</hex>
	
	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Address" type="Absolute16" offset="2"/>
	
	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Address" type="Absolute16" offset="3"/>
	
	<int:Copy value="0" destination="Object32.Length"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<byte>7</byte>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Type" type="Absolute16"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Object32.Create" type="Absolute16"/>

	<int:Copy source="Object32.Address" destination="Dictionary32.Value"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Dictionary32.Append" type="Absolute16"/>

	<!--Create Root Object-->
	<int:Copy source="Dictionary32.Address" destination="Object32.Address"/>

	<int:Copy value="28" destination="Object32.Length"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<byte>6</byte>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="Object32.Type" type="Absolute16"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Object32.Create" type="Absolute16"/>

	<int:Copy source="Object32.Address" destination="Command.Object"/>

	<!--Test dictionary entries-->
	<int:Copy source="Object32.Address" destination="Dictionary32.Value"/>

	<int:Copy value="8" destination="String32.Length"/>
	
	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Create" type="Absolute16"/>

	<cpu:CopyImmediate8ToAccumulator/>
	<string>c</string>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Append" type="Absolute16"/>

	<int:Copy source="String32.Address" destination="Dictionary32.Key"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="Dictionary32.Append" type="Absolute16"/>

	<label id="showPrompt"/>

	<!--Show Prompt-->
	<cpu:CopyImmediate8ToAccumulator/>
	<ascii:GreaterThan/>

	<cpu:CopyAccumulatorToImmediate16Address/>
	<addressOf ref="VideoData0" type="Absolute16"/>

	<cpu:IncrementImmediate16Address/>
	<addressOf ref="column" type="Absolute16"/>

	<!--Wait For Key Press-->
	<label id="waitForKeyPress"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="readPs2Byte" type="Absolute16"/>

	<cpu:CompareAccumulatorToImmediate8/>
	<hex>f0</hex>

	<cpu:BranchToRelative8IfNotEqual/>
	<addressOf ref="notKeyUp" type="Relative8"/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="readPs2Byte" type="Absolute16"/>

	<cpu:CopyAccumulatorToXIndex/>

	<cpu:CopyImmediate8ToAccumulator/>
	<byte>0</byte>

	<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
	<addressOf ref="keys" type="Absolute16"/>

	<cpu:JumpToImmediate16Address/>
	<addressOf ref="waitForKeyPress" type="Absolute16"/>

	<label id="notKeyUp"/>

	<cpu:CopyAccumulatorToXIndex/>

	<cpu:CopyImmediate8ToAccumulator/>
	<byte>1</byte>

	<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
	<addressOf ref="keys" type="Absolute16"/>

	<cpu:CopyXIndexToAccumulator/>

	<!--Check Keys-->
	<cpu:CompareAccumulatorToImmediate8/>
	<hex>5a</hex>

	<cpu:BranchToRelative8IfNotEqual/>
	<addressOf ref="notEnter" type="Relative8"/>

	<cpu:JumpToImmediate16Address/>
	<addressOf ref="handleEnter" type="Absolute16"/>

	<label id="notEnter"/>

	<cpu:CompareAccumulatorToImmediate8/>
	<hex>66</hex>

	<cpu:BranchToRelative8IfNotEqual/>
	<addressOf ref="notBackspace" type="Relative8"/>

	<cpu:JumpToImmediate16Address/>
	<addressOf ref="handleBackspace" type="Absolute16"/>

	<label id="notBackspace"/>

	<!--Check Buffer-->
	<!--<cpu:PushAccumulatorToStack/>

	<cpu:CopyImmediate8ToXIndex/>
	<hex>fe</hex>

	<cpu:CopyImmediate16AddressToAccumulator/>
	<addressOf ref="buffer" type="Absolute16"/>

	<cpu:CopyAccumulatorToImmediate8PlusXIndexAddress/>
	<byte>0</byte>

	<cpu:CopyImmediate16AddressToAccumulator/>
	<addressOf ref="buffer" type="Absolute16" offset="1"/>

	<cpu:CopyAccumulatorToImmediate8PlusXIndexAddress/>
	<byte>1</byte>

	<str:GetLength/>

	<cpu:PullAccumulatorFromStack/>

	<cpu:CopyAccumulatorToXIndex/>

	<cpu:CopyImmediate8AddressToAccumulator/>
	<hex>02</hex>

	<cpu:CompareAccumulatorToImmediate8/>
	<byte>79</byte>

	<cpu:BranchToRelative8IfEqual/>
	<addressOf ref="waitForKeyPress" type="Relative8"/>-->

	<!--Get ASCII Code-->
	<cpu:CopyImmediate16AddressToAccumulator/>
	<hex>9e12</hex>

	<cpu:OrAccumulatorWithImmediate16Address/>
	<hex>9e59</hex>

	<cpu:BranchToRelative8IfZero/>
	<addressOf ref="notShift" type="Relative8"/>

	<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
	<addressOf ref="ps2ShiftCodes" type="Absolute16"/>

	<cpu:JumpToImmediate16Address/>
	<addressOf ref="checkCharacter" type="Absolute16"/>

	<label id="notShift"/>

	<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
	<addressOf ref="ps2Codes" type="Absolute16"/>

	<label id="checkCharacter"/>

	<cpu:CompareAccumulatorToImmediate8/>
	<hex>00</hex>

	<cpu:BranchToRelative8IfEqual/>
	<addressOf ref="waitForKeyPress" type="Relative8"/>

	<!--Append Character-->
	<cpu:PushAccumulatorToStack/>
	<cpu:PushAccumulatorToStack/>

	<int:Copy source="buffer" destination="String32.Address"/>

	<cpu:PullAccumulatorFromStack/>

	<cpu:CallImmediate16Address/>
	<addressOf ref="String32.Append" type="Absolute16"/>

	<cpu:PullAccumulatorFromStack/>

	<!--Draw Character-->
	<cpu:CallImmediate16Address/>
	<addressOf ref="drawCharacter" type="Absolute16"/>

	<cpu:JumpToImmediate16Address/>
	<addressOf ref="waitForKeyPress" type="Absolute16"/>

	<!--Functions-->
	<label id="handleEnter">
		<cpu:CallImmediate16Address/>
		<addressOf ref="newLine" type="Absolute16"/>

		<!--Check Buffer-->
		<!--<int:Copy source="buffer" destination="MemoryReader32.Position"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryReader32.ReadInteger" type="Absolute16"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="MemoryReader32.Value" type="Absolute16"/>

		<cpu:OrAccumulatorWithImmediate16Address/>
		<addressOf ref="MemoryReader32.Value" type="Absolute16" offset="1"/>

		<cpu:OrAccumulatorWithImmediate16Address/>
		<addressOf ref="MemoryReader32.Value" type="Absolute16" offset="2"/>

		<cpu:OrAccumulatorWithImmediate16Address/>
		<addressOf ref="MemoryReader32.Value" type="Absolute16" offset="3"/>

		<cpu:BranchToRelative8IfZero/>
		<addressOf ref="clearBuffer" type="Relative8"/>-->

		<!--Execute Command-->
		<cpu:CallImmediate16Address/>
		<addressOf ref="executeCommand" type="Absolute16"/>
		
		<cpu:BranchToRelative8IfCarry/>
		<addressOf ref="clearBuffer" type="Relative8"/>

		<!--Convert Object-->
		<cpu:CallImmediate16Address/>
		<addressOf ref="convertObject" type="Absolute16"/>

		<!--Draw String-->
		<cpu:CallImmediate16Address/>
		<addressOf ref="drawString" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="newLine" type="Absolute16"/>

		<!--Clear Buffer-->
		<label id="clearBuffer"/>

		<int:Copy source="buffer" destination="String32.Address"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Clear" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="showPrompt" type="Absolute16"/>
	</label>

	<label id="handleBackspace">
		<int:Copy source="buffer" destination="String32.Address"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.TrimEnd" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="back" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<ascii:Space/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoData0" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="back" type="Absolute16"/>

		<cpu:DecrementImmediate16Address/>
		<addressOf ref="column" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="waitForKeyPress" type="Absolute16"/>
	</label>

	<label id="executeCommand">
		<int:Copy source="buffer" destination="Command.Text"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="Command.Execute" type="Absolute16"/>

		<int:Copy source="Command.Result" destination="result"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="convertObject">
		<int:Add ref="result" value="8" destination="MemoryReader32.Position"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryReader32.ReadByte" type="Absolute16"/>

		<!--Byte Array-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>0</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notByteArray" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notByteArray"/>

		<!--Integer-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>1</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notInteger" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notInteger"/>

		<!--Decimal-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>2</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notDecimal" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notDecimal"/>

		<!--String-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>3</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notString" type="Relative8"/>

		<int:Copy source="result" destination="MemoryReader32.Position"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryReader32.ReadByte" type="Absolute16"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="output" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryReader32.ReadByte" type="Absolute16"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="output" type="Absolute16" offset="1"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryReader32.ReadByte" type="Absolute16"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="output" type="Absolute16" offset="2"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryReader32.ReadByte" type="Absolute16"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="output" type="Absolute16" offset="3"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notString"/>

		<!--Array-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>4</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notArray" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notArray"/>

		<!--List-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>5</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notList" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notList"/>

		<!--Dictionary-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>6</byte>
		
		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notDictionary" type="Relative8"/>

		<int:Copy value="1" destination="String32.Length"/>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Create" type="Absolute16"/>
		
		<cpu:CopyImmediate8ToAccumulator/>
		<string>D</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
		
		<int:Copy source="String32.Address" destination="output"/>
		
		<cpu:ReturnFromSubroutine/>

		<label id="notDictionary"/>

		<!--Function-->
		<cpu:CompareAccumulatorToImmediate8/>
		<byte>7</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notFunction" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>

		<label id="notFunction"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="drawString">
		<scope>
			<int:Copy source="output" destination="MemoryReader32.Position"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryReader32.ReadInteger" type="Absolute16"/>

			<label id="forEachCharacter"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryReader32.ReadByte" type="Absolute16"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="drawCharacter" type="Absolute16"/>

			<!--TODO-->
			<cpu:DecrementImmediate16Address/>
			<addressOf ref="MemoryReader32.Value" type="Absolute16"/>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="forEachCharacter" type="Relative8"/>

			<cpu:ReturnFromSubroutine/>
		</scope>
	</label>

	<label id="drawCharacter">
		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoData0" type="Absolute16"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="column" type="Absolute16"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="newLine">
		<!--Check For Scroll-->
		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="row" type="Absolute16"/>

		<cpu:CompareAccumulatorToImmediate8/>
		<byte>59</byte>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notScroll" type="Relative8"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="scroll" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="resetColumn" type="Absolute16"/>

		<label id="notScroll"/>

		<!--Move To Next Line-->
		<cpu:ClearCarryFlag/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:AddImmediate8ToAccumulator/>
		<hex>01</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:AddImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="row" type="Absolute16"/>

		<label id="resetColumn"/>

		<!--Move To Column 0-->
		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="column" type="Absolute16"/>

		<cpu:ShiftAccumulatorLeft/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="column" type="Absolute16"/>

		<cpu:SetCarryFlag/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressLow" type="Absolute16"/>

		<cpu:SubtractImmediate16AddressFromAccumulator/>
		<addressOf ref="column" type="Absolute16"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressLow" type="Absolute16"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:SubtractImmediate8FromAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:SubtractImmediate8FromAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<!--Reset Counters-->
		<cpu:CopyImmediate8ToAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="column" type="Absolute16"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="back">
		<cpu:SetCarryFlag/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressLow" type="Absolute16"/>

		<cpu:SubtractImmediate8FromAccumulator/>
		<byte>2</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressLow" type="Absolute16"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:SubtractImmediate8FromAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressMid" type="Absolute16"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:SubtractImmediate8FromAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="VideoAddressHigh" type="Absolute16"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="scroll">
		<scope>
			<!--Save Video Addresss-->
			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="VideoAddressLow" type="Absolute16"/>

			<cpu:PushAccumulatorToStack/>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="VideoAddressMid" type="Absolute16"/>

			<cpu:PushAccumulatorToStack/>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="VideoAddressHigh" type="Absolute16"/>

			<cpu:PushAccumulatorToStack/>

			<!--Copy Characters-->
			<cpu:CopyImmediate8ToAccumulator/>
			<hex>10</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressHigh" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>00</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressMid" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>00</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressLow" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>01</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoControl" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>10</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressHigh" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>01</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressMid" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>00</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressLow" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<hex>00</hex>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoControl" type="Absolute16"/>

			<cpu:CopyImmediate8ToYIndex/>
			<byte>60</byte>

			<label id="loopY"/>

			<cpu:CopyImmediate8ToXIndex/>
			<byte>128</byte>

			<label id="loopX"/>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="VideoData1" type="Absolute16"/>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoData0" type="Absolute16"/>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="VideoData1" type="Absolute16"/>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoData0" type="Absolute16"/>

			<cpu:DecrementXIndex/>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="loopX" type="Relative8"/>

			<cpu:DecrementYIndex/>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="loopY" type="Relative8"/>

			<!--Restore Video Address-->
			<cpu:PullAccumulatorFromStack/>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressHigh" type="Absolute16"/>

			<cpu:PullAccumulatorFromStack/>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressMid" type="Absolute16"/>

			<cpu:PullAccumulatorFromStack/>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<addressOf ref="VideoAddressLow" type="Absolute16"/>

			<cpu:ReturnFromSubroutine/>
		</scope>
	</label>

	<label id="readPs2Byte">
		<scope>
			<!--Input Mode-->
			<cpu:CopyImmediate16AddressToAccumulator/>
			<hex>9f73</hex>

			<cpu:AndAccumulatorWithImmediate8/>
			<binary>11111100</binary>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<hex>9f73</hex>

			<!--Wait For PS/2 Idle-->
			<cpu:CopyImmediate8ToAccumulator/>
			<binary>00000011</binary>

			<label id="waitStart"/>

			<cpu:TestImmediate16AddressWithAccumulator/>
			<hex>9f71</hex>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="waitStart" type="Relative8"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<binary>00000010</binary>

			<label id="waitNotReady"/>

			<cpu:TestImmediate16AddressWithAccumulator/>
			<hex>9f71</hex>

			<cpu:BranchToRelative8IfZero/>
			<addressOf ref="waitNotReady" type="Relative8"/>

			<cpu:CopyImmediate8ToXIndex/>
			<byte>9</byte>

			<label id="readBit"/>

			<label id="waitForReady"/>

			<cpu:TestImmediate16AddressWithAccumulator/>
			<hex>9f71</hex>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="waitForReady" type="Relative8"/>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<hex>9f71</hex>

			<cpu:AndAccumulatorWithImmediate8/>
			<binary>00000001</binary>

			<cpu:CompareAccumulatorToImmediate8/>
			<binary>00000001</binary>

			<cpu:RollImmediate16AddressRight/>
			<addressOf ref="ps2Data" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<binary>00000010</binary>

			<label id="waitForNotReady2"/>

			<cpu:TestImmediate16AddressWithAccumulator/>
			<hex>9f71</hex>

			<cpu:BranchToRelative8IfZero/>
			<addressOf ref="waitForNotReady2" type="Relative8"/>

			<cpu:DecrementXIndex/>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="readBit" type="Relative8"/>

			<cpu:RollImmediate16AddressLeft/>
			<addressOf ref="ps2Data" type="Absolute16"/>

			<cpu:CopyImmediate8ToAccumulator/>
			<binary>00000010</binary>

			<label id="waitForReady2"/>

			<cpu:TestImmediate16AddressWithAccumulator/>
			<hex>9f71</hex>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="waitForReady2" type="Relative8"/>

			<label id="waitForNotReady3"/>

			<cpu:TestImmediate16AddressWithAccumulator/>
			<hex>9f71</hex>

			<cpu:BranchToRelative8IfZero/>
			<addressOf ref="waitForNotReady3" type="Relative8"/>

			<label id="disableKeyboard"/>

			<!--Output Mode-->
			<cpu:CopyImmediate16AddressToAccumulator/>
			<hex>9f73</hex>

			<cpu:OrAccumulatorWithImmediate8/>
			<binary>00000011</binary>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<hex>9f73</hex>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<hex>9f71</hex>

			<cpu:AndAccumulatorWithImmediate8/>
			<binary>11111101</binary>

			<cpu:OrAccumulatorWithImmediate8/>
			<binary>00000001</binary>

			<cpu:CopyAccumulatorToImmediate16Address/>
			<hex>9f71</hex>

			<label id="done"/>

			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="ps2Data" type="Absolute16"/>

			<cpu:ReturnFromSubroutine/>
		</scope>
	</label>

	<label id="waitPs2Idle">
		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="stop">
		<cpu:JumpToImmediate16Address/>
		<addressOf ref="stop" type="Absolute16"/>
	</label>

	<label id="interruptHandler">
		<cpu:ReturnFromSubroutine/>
	</label>

	<!--Tables-->
	<label id="interruptTable">
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
		<addressOf ref="interruptHandler" type="Absolute16"/>
	</label>

	<label id="ps2Codes">
		<!--00-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<!--10-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>71</hex>
		<hex>31</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>7a</hex>
		<hex>73</hex>
		<hex>61</hex>
		<hex>77</hex>
		<hex>32</hex>
		<hex>00</hex>

		<!--20-->
		<hex>00</hex>
		<hex>63</hex>
		<hex>78</hex>
		<hex>64</hex>
		<hex>65</hex>
		<hex>34</hex>
		<hex>33</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>20</hex>
		<hex>76</hex>
		<hex>66</hex>
		<hex>74</hex>
		<hex>72</hex>
		<hex>35</hex>
		<hex>00</hex>

		<!--30-->
		<hex>00</hex>
		<hex>6e</hex>
		<hex>62</hex>
		<hex>68</hex>
		<hex>67</hex>
		<hex>79</hex>
		<hex>36</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>6d</hex>
		<hex>6a</hex>
		<hex>75</hex>
		<hex>37</hex>
		<hex>38</hex>
		<hex>00</hex>

		<!--40-->
		<hex>00</hex>
		<hex>2c</hex>
		<hex>6b</hex>
		<hex>69</hex>
		<hex>6f</hex>
		<hex>30</hex>
		<hex>39</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>2e</hex>
		<hex>00</hex>
		<hex>6c</hex>
		<hex>00</hex>
		<hex>70</hex>
		<hex>2D</hex>
		<hex>00</hex>

		<!--50-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>3D</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<!--60-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<!--70-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
	</label>

	<label id="ps2ShiftCodes">
		<!--00-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<!--10-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>51</hex>
		<hex>21</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>5a</hex>
		<hex>53</hex>
		<hex>41</hex>
		<hex>57</hex>
		<hex>40</hex>
		<hex>00</hex>

		<!--20-->
		<hex>00</hex>
		<hex>43</hex>
		<hex>58</hex>
		<hex>44</hex>
		<hex>45</hex>
		<hex>24</hex>
		<hex>23</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>20</hex>
		<hex>56</hex>
		<hex>46</hex>
		<hex>54</hex>
		<hex>52</hex>
		<hex>25</hex>
		<hex>00</hex>

		<!--30-->
		<hex>00</hex>
		<hex>4e</hex>
		<hex>42</hex>
		<hex>48</hex>
		<hex>47</hex>
		<hex>59</hex>
		<hex>5E</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>4d</hex>
		<hex>4a</hex>
		<hex>55</hex>
		<hex>26</hex>
		<hex>2A</hex>
		<hex>00</hex>

		<!--40-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>4b</hex>
		<hex>49</hex>
		<hex>4f</hex>
		<hex>29</hex>
		<hex>28</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>4c</hex>
		<hex>00</hex>
		<hex>50</hex>
		<hex>5F</hex>
		<hex>00</hex>

		<!--50-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>2B</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<!--60-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<!--70-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>

		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
	</label>

	<!--Variables-->
	<var:byte id="ps2Data">0</var:byte>
	<var:byte id="row">0</var:byte>
	<var:byte id="column">0</var:byte>
	<var:integer id="buffer">0</var:integer>
	<var:integer id="result">0</var:integer>
	<var:integer id="output">0</var:integer>

	<label id="test">
		<int:Copy value="16" destination="String32.Length"/>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Create" type="Absolute16"/>
		
		<cpu:CopyImmediate8ToAccumulator/>
		<string>H</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>e</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>l</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>l</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>o</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>,</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string xml:space="preserve"> </string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>w</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>o</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>r</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>l</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>d</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
	
		<cpu:CopyImmediate8ToAccumulator/>
		<string>!</string>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="String32.Append" type="Absolute16"/>
		
		<int:Copy source="String32.Address" destination="Object32.Address"/>
		
		<int:Copy value="20" destination="Object32.Length"/>
		
		<cpu:CopyImmediate8ToAccumulator/>
		<byte>3</byte>
		
		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="Object32.Type" type="Absolute16"/>
		
		<cpu:CallImmediate16Address/>
		<addressOf ref="Object32.Create" type="Absolute16"/>
		
		<int:Copy source="Object32.Address" destination="Function.Result"/>
	
		<cpu:ReturnFromSubroutine/>
	</label>
</scope>