<?xml version="1.0" encoding="utf-8" ?>

<scope
	xmlns="http://metalx.org/Program"
	xmlns:var="http://metalx.org/Variable"
	xmlns:cpu="http://metalx.org/Amd/Amd64/Operators"
	xmlns:op="http://metalx.org/Amd/Amd64/Operands"
	xmlns:math="http://metalx.org/Amd/Amd64/Math"
	xmlns:ari="http://metalx.org/Amd/Amd64/Arithmetic"
	xmlns:inc="http://metalx.org/Amd/Amd64/Increment"
	xmlns:imm="http://metalx.org/Amd/Amd64/Immediate"
	xmlns:shift="http://metalx.org/Amd/Amd64/Shift"
	xmlns:logic="http://metalx.org/Amd/Amd64/Logic"
	xmlns:index="http://metalx.org/Amd/Amd64/Index"
	xmlns:fn="http://metalx.org/Microsoft/x64/Functions">

	<label id="entryPoint" export="Application.EntryPoint"/>

	<!--Load Kernel32.dll-->
	<cpu:CopyImmediateToCX/>
	<addressOf ref="kernel32.fileName" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.LoadLibrary"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="kernel32.handle" type="Absolute64"/>

	<!--Load User32.dll-->
	<cpu:CopyImmediateToCX/>
	<addressOf ref="user32.fileName" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.LoadLibrary"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.handle" type="Absolute64"/>

	<!--Get GetLastError address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="kernel32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="kernel32.getLastError.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="kernel32.getLastError.address" type="Absolute64"/>

	<!--Get GetModuleHandle address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="kernel32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="kernel32.getModuleHandle.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="kernel32.getModuleHandle.address" type="Absolute64"/>

	<!--Get ExitProcess address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="kernel32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="kernel32.exitProcess.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="kernel32.exitProcess.address" type="Absolute64"/>

	<!--Get MessageBox address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.messageBox.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.messageBox.address" type="Absolute64"/>

	<!--Get LoadIcon address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.loadIcon.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.loadIcon.address" type="Absolute64"/>

	<!--Get LoadCursor address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.loadCursor.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.loadCursor.address" type="Absolute64"/>

	<!--Get RegisterClass address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.registerClass.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.registerClass.address" type="Absolute64"/>

	<!--Get CreateWindow address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.createWindow.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.createWindow.address" type="Absolute64"/>

	<!--Get GetMessage address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.getMessage.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.getMessage.address" type="Absolute64"/>

	<!--Get DispatchMessage address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.dispatchMessage.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.dispatchMessage.address" type="Absolute64"/>

	<!--Get DefWindowProc address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.defWindowProc.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.defWindowProc.address" type="Absolute64"/>

	<!--Get PostQuitMessage address-->
	<cpu:CopyOperandToRegister/>
	<op:CX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="user32.handle" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<addressOf ref="user32.postQuitMessage.name" type="Absolute32"/>

	<fn:CallAddress ref="ExeHeader.GetProcAddress"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="user32.postQuitMessage.address" type="Absolute64"/>

	<!--Show MessageBox-->
	<!--<cpu:CopyImmediateToCX/>
	<int>0</int>
	
	<cpu:CopyImmediateToDX/>
	<addressOf ref="strings.application" type="Absolute32"/>
	
	<cpu:Operand64Base/>
	<cpu:CopyImmediateToOperandFunction/>
	<imm:CopyImmediateToAX/>
	<addressOf ref="strings.application" type="Absolute32"/>
	
	<cpu:Operand64Base/>
	<cpu:CopyImmediateToOperandFunction/>
	<imm:CopyImmediateToCX/>
	<int>0</int>
	
	<fn:CallAddress ref="user32.messageBox.address"/>-->

	<!--Call GetModuleHandle(name)-->
	<cpu:CopyImmediateToCX/>
	<int>0</int>

	<fn:CallAddress ref="kernel32.getModuleHandle.address"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="module.handle" type="Absolute64"/>

	<!--Call LoadIcon(moduleHandle, iconName)-->
	<cpu:CopyImmediateToCX/>
	<int>0</int>

	<cpu:CopyImmediateToDX/>
	<int>32512</int>
	<!--<int>32518</int>-->

	<fn:CallAddress ref="user32.loadIcon.address"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="icon.handle" type="Absolute64"/>

	<!--Call LoadCursor(moduleHandle, cursorName)-->
	<cpu:CopyImmediateToCX/>
	<int>0</int>

	<cpu:CopyImmediateToDX/>
	<int>32512</int>
	<!--<int>32649</int>-->

	<fn:CallAddress ref="user32.loadCursor.address"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="cursor.handle" type="Absolute64"/>

	<!--Call RegisterClass(class)-->
	<cpu:CopyAbsoluteMemoryToAX/>
	<addressOf ref="module.handle" type="Absolute64"/>

	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="window.class.moduleHandle" type="Absolute64"/>

	<cpu:CopyAbsoluteMemoryToAX/>
	<addressOf ref="icon.handle" type="Absolute64"/>

	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="window.class.iconHandle" type="Absolute64"/>
	
	<cpu:CopyAbsoluteMemoryToAX/>
	<addressOf ref="cursor.handle" type="Absolute64"/>
	
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="window.class.cursorHandle" type="Absolute64"/>
	
	<cpu:CopyImmediateToCX/>
	<addressOf ref="window.class" type="Absolute32"/>

	<fn:CallAddress ref="user32.registerClass.address"/>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="window.class.handle" type="Absolute64"/>

	<!--Call CreateWindow(style2, className, text, style, x, y, width, height, parent, menuHandle, moduleHandle, param)-->

	<!--Style 2-->
	<cpu:CopyImmediateToCX/>
	<int>0</int>

	<!--Class-->
	<cpu:CopyOperandToRegister/>
	<op:DX-IndexAddress/>
	<index:Immediate32/>
	<addressOf ref="window.class.handle" type="Absolute32"/>
	
	<!--Text-->
	<cpu:Operand64Base/>
	<cpu:CopyImmediateToOperandFunction/>
	<imm:CopyImmediateToAX/>
	<addressOf ref="strings.application" type="Absolute32"/>
	
	<!--Style-->
	<cpu:Operand64Base/>
	<cpu:CopyImmediateToOperandFunction/>
	<imm:CopyImmediateToCX/>
	<hex>10CF0000</hex>

	<!--Padding-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<long>0</long>

	<cpu:PushAXToStack/>

	<!--Param-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<long>0</long>

	<cpu:PushAXToStack/>

	<!--Instance-->
	<cpu:Operand64/>
	<cpu:LogicFunction/>
	<logic:PushIndexAddress/>
	<index:Immediate32/>
	<addressOf ref="module.handle" type="Absolute32"/>

	<!--Menu-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<long>0</long>

	<cpu:PushAXToStack/>

	<!--Parent-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<long>0</long>

	<cpu:PushAXToStack/>

	<!--Height-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<hex>0000000080000000</hex>

	<cpu:PushAXToStack/>

	<!--Width-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<hex>0000000080000000</hex>

	<cpu:PushAXToStack/>

	<!--Y-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<hex>0000000080000000</hex>

	<cpu:PushAXToStack/>

	<!--X-->
	<cpu:Operand64/>
	<cpu:CopyImmediateToAX/>
	<hex>0000000080000000</hex>

	<cpu:PushAXToStack/>

	<!--<fn:CallAddress ref="user32.createWindow.address"/>-->
		<cpu:MathImmediate8ToOperandFunction/>
		<math:SubtractFromSPRegister/>
		<byte>32</byte>

		<cpu:LogicFunction/>
		<logic:CallIndexAddress/>
		<index:Immediate32/>
		<addressOf ref="user32.createWindow.address" type="Absolute32"/>

		<cpu:MathImmediate8ToOperandFunction/>
		<math:AddToSPRegister/>
		<byte>32</byte>

	<cpu:MathImmediate8ToOperandFunction/>
	<math:AddToSPRegister/>
	<byte>72</byte>

	<cpu:Operand64/>
	<cpu:CopyAXToAbsoluteMemory/>
	<addressOf ref="window.handle" type="Absolute64"/>
	
	<!--Process Messages-->
	<label id="processMessages"/>

	<!--Call GetMessage(message, windowHandle, filterMin, filterMax)-->
	<cpu:CopyImmediateToCX/>
	<addressOf ref="message" type="Absolute32"/>

	<cpu:CopyImmediateToDX/>
	<int>0</int>

	<cpu:Operand64Base/>
	<cpu:CopyImmediateToOperandFunction/>
	<imm:CopyImmediateToAX/>
	<int>0</int>

	<cpu:Operand64Base/>
	<cpu:CopyImmediateToOperandFunction/>
	<imm:CopyImmediateToCX/>
	<int>0</int>

	<fn:CallAddress ref="user32.getMessage.address"/>
	
	<cpu:CompareAXToImmediate/>
	<int>0</int>

	<cpu:BranchToRelative8IfEqual/>
	<addressOf ref="exit" type="Relative8"/>

	<!--Call DispatchMessage(message)-->
	<cpu:CopyImmediateToCX/>
	<addressOf ref="message" type="Absolute32"/>

	<fn:CallAddress ref="user32.dispatchMessage.address"/>

	<cpu:JumpToRelative/>
	<addressOf ref="processMessages" type="Relative32"/>

	<label id="exit"/>

	<cpu:CopyImmediateToCX/>
	<int>0</int>

	<fn:CallAddress ref="kernel32.exitProcess.address"/>

	<cpu:ReturnToNearCaller/>

	<!--HandleMessage(windowHandle, message, parameter, parameter2)-->
	<label id="window.handleMessage">
		<cpu:CopyImmediateToAX/>
		<int>2</int>

		<cpu:CompareRegisterToOperand/>
		<op:AX-DXRegister/>
		
		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="windowClosed" type="Relative8"/>

		<!--Call DefWindowProc(windowHandle, message, parameter, parameter2)-->
		<fn:CallAddress ref="user32.defWindowProc.address"/>

		<cpu:ReturnToNearCaller/>
		
		<label id="windowClosed"/>

		<!--Call PostQuitMessage(exitCode)-->
		<cpu:CopyImmediateToCX/>
		<int>0</int>

		<fn:CallAddress ref="user32.postQuitMessage.address"/>

		<cpu:ReturnToNearCaller/>
	</label>

	<label id="kernel32.fileName"/>
	<string>kernel32.dll</string>
	<byte>0</byte>

	<label id="kernel32.getModuleHandle.name"/>
	<string>GetModuleHandleA</string>
	<byte>0</byte>

	<label id="kernel32.getLastError.name"/>
	<string>GetLastError</string>
	<byte>0</byte>

	<label id="kernel32.exitProcess.name"/>
	<string>ExitProcess</string>
	<byte>0</byte>

	<label id="user32.fileName"/>
	<string>user32.dll</string>
	<byte>0</byte>

	<label id="user32.messageBox.name"/>
	<string>MessageBoxA</string>
	<byte>0</byte>

	<label id="user32.loadIcon.name"/>
	<string>LoadIconA</string>
	<byte>0</byte>

	<label id="user32.loadCursor.name"/>
	<string>LoadCursorA</string>
	<byte>0</byte>

	<label id="user32.registerClass.name"/>
	<string>RegisterClassA</string>
	<byte>0</byte>

	<label id="user32.createWindow.name"/>
	<string>CreateWindowExA</string>
	<byte>0</byte>

	<label id="user32.getMessage.name"/>
	<string>GetMessageA</string>
	<byte>0</byte>

	<label id="user32.dispatchMessage.name"/>
	<string>DispatchMessageA</string>
	<byte>0</byte>

	<label id="user32.defWindowProc.name"/>
	<string>DefWindowProcA</string>
	<byte>0</byte>

	<label id="user32.postQuitMessage.name"/>
	<string>PostQuitMessage</string>
	<byte>0</byte>

	<label id="strings.application"/>
	<string>Application</string>
	<byte>0</byte>

	<var:long id="user32.handle">0</var:long>
	<var:long id="user32.messageBox.address">0</var:long>
	<var:long id="user32.loadIcon.address">0</var:long>
	<var:long id="user32.loadCursor.address">0</var:long>
	<var:long id="user32.registerClass.address">0</var:long>
	<var:long id="user32.createWindow.address">0</var:long>
	<var:long id="user32.getMessage.address">0</var:long>
	<var:long id="user32.dispatchMessage.address">0</var:long>
	<var:long id="user32.defWindowProc.address">0</var:long>
	<var:long id="user32.postQuitMessage.address">0</var:long>
	<var:long id="kernel32.handle">0</var:long>
	<var:long id="kernel32.getModuleHandle.address">0</var:long>
	<var:long id="kernel32.getLastError.address">0</var:long>
	<var:long id="kernel32.exitProcess.address">0</var:long>
	<var:long id="module.handle">0</var:long>
	<var:long id="icon.handle">0</var:long>
	<var:long id="cursor.handle">0</var:long>
	<var:long id="window.handle">0</var:long>

	<label id="message"/>
	<var:long id="message.windowHandle">0</var:long>
	<var:long id="message.type">0</var:long>
	<var:long id="message.parameter">0</var:long>
	<var:long id="message.parameter2">0</var:long>
	<var:long id="message.time">0</var:long>
	<var:long id="message.point.x">0</var:long>
	<var:long id="message.point.y">0</var:long>
	<var:long id="message.private">0</var:long>

	<label id="window.class">
		<!--Style-->
		<long>0</long>
		<!--WindowProcedure-->
		<addressOf ref="window.handleMessage" type="Absolute64"/>
		<!--ClassDataLength-->
		<int>0</int>
		<!--WindowDataLength-->
		<int>0</int>
		<!--Instance-->
		<var:long id="window.class.moduleHandle">0</var:long>
		<!--Icon-->
		<var:long id="window.class.iconHandle">0</var:long>
		<!--Cursor-->
		<var:long id="window.class.cursorHandle">0</var:long>
		<!--Background-->
		<long>6</long>
		<!--<long>0</long>-->
		<!--Menu-->
		<long>0</long>
		<!--Name-->
		<addressOf ref="strings.application" type="Absolute64"/>
	</label>

	<var:long id="window.class.handle">0</var:long>
</scope>