<?xml version="1.0" encoding="utf-8"?>

<scope
	xmlns="http://metalx.org/Program"
	xmlns:cpu="http://metalx.org/Arm/v6/Operators"
	xmlns:var="http://metalx.org/Variable">

	<cpu:Call ref="Screen.Enable"/>
	
	<cpu:Call ref="Screen.Clear"/>
	
	<cpu:SetRegisterToAddressOf ref="message" register="5"/>
	
	<cpu:Call ref="Serial.WriteLine"/>

	<label id="showPrompt"/>
	
	<cpu:SetRegisterToValue value="62" register="5"/>
	
	<cpu:Call ref="Serial.WriteCharacter"/>

	<label id="waitForCharacter"/>
	
	<cpu:Call ref="Serial.ReadCharacter"/>

	<!--Empty-->
	<cpu:TestExclusiveOrRegisterWithValue register="5" value="0"/>

	<cpu:Jump ref="waitForCharacter" condition="Equal"/>

	<!--Return-->
	<cpu:TestExclusiveOrRegisterWithValue register="5" value="13"/>
	
	<cpu:Jump ref="handleEnter" condition="Equal"/>

	<!--Backspace-->
	<cpu:TestExclusiveOrRegisterWithValue register="5" value="8"/>
	
	<cpu:Jump ref="handleBackspace" condition="Equal"/>
	
	<!--Other-->
	<cpu:Call ref="Serial.WriteCharacter"/>

	<cpu:Jump ref="waitForCharacter"/>

	<label id="handleEnter"/>
	
	<cpu:Call ref="Serial.WriteCharacter"/>
	
	<cpu:SetRegisterToValue register="5" value="10"/>
	
	<cpu:Call ref="Serial.WriteCharacter"/>
	
	<cpu:Jump ref="showPrompt"/>
	
	<label id="handleBackspace"/>
	
	<cpu:Call ref="Serial.WriteCharacter"/>
	
	<cpu:SetRegisterToValue register="5" value="32"/>
	
	<cpu:Call ref="Serial.WriteCharacter"/>
	
	<cpu:SetRegisterToValue register="5" value="8"/>
	
	<cpu:Call ref="Serial.WriteCharacter"/>
	
	<cpu:Jump ref="waitForCharacter"/>

	<!--UART 0x20201000-->
	<label id="uart" offset="20201000"/>

	<label id="Serial.ReadCharacter">
		<cpu:SetRegisterToAddressOf register="9" ref="uart"/>

		<cpu:CopyAddressToRegister8 register="5" addressRegister="9" offset="24"/>

		<cpu:AndRegisterWithValue register="5" value="16" setFlags="true"/>

		<cpu:SetRegisterToValue register="5" value="0" condition="NotEqual"/>

		<cpu:Return condition="NotEqual"/>

		<cpu:CopyAddressToRegister8 register="5" addressRegister="9"/>

		<cpu:Return/>
	</label>

	<label id="Serial.WriteCharacter">
		<cpu:SetRegisterToAddressOf register="9" ref="uart"/>

		<cpu:CopyRegisterToAddress8 register="5" addressRegister="9"/>

		<cpu:Return/>
	</label>

	<label id="Serial.WriteString">
		<scope>
			<cpu:SetRegisterToAddressOf register="9" ref="uart"/>
			<cpu:CopyRegister register="5" destination="10"/>
			<cpu:CopyAddressToRegister32 addressRegister="10" register="11"/>
			<cpu:AddValueToRegister value="4" register="10"/>

			<label id="forEachCharacter"/>

			<cpu:TestExclusiveOrRegisterWithValue register="11" value="0"/>
			
			<cpu:Jump ref="done" condition="Equal"/>
			
			<cpu:CopyAddressToRegister8 addressRegister="10" register="12"/>

			<cpu:CopyRegisterToAddress8 register="12" addressRegister="9"/>

			<cpu:AddValueToRegister value="1" register="10" destination="10"/>

			<cpu:SubtractValueFromRegister value="1" register="11"/>

			<cpu:Jump ref="forEachCharacter"/>

			<label id="done"/>

			<cpu:Return/>
		</scope>
	</label>

	<label id="Serial.WriteLine">
		<scope>
			<cpu:SetRegisterToAddressOf register="9" ref="uart"/>
			<cpu:CopyRegister register="5" destination="10"/>
			<cpu:CopyAddressToRegister32 addressRegister="10" register="11"/>
			<cpu:AddValueToRegister value="4" register="10"/>

			<label id="forEachCharacter2"/>

			<cpu:TestExclusiveOrRegisterWithValue register="11" value="0"/>
			
			<cpu:Jump ref="done2" condition="Equal"/>
			
			<cpu:CopyAddressToRegister8 addressRegister="10" register="12"/>

			<cpu:CopyRegisterToAddress8 register="12" addressRegister="9"/>

			<cpu:AddValueToRegister value="1" register="10" destination="10"/>

			<cpu:SubtractValueFromRegister value="1" register="11"/>

			<cpu:Jump ref="forEachCharacter2"/>

			<label id="done2"/>

			<cpu:SetRegisterToValue register="12" value="13"/>

			<cpu:CopyRegisterToAddress8 register="12" addressRegister="9"/>

			<cpu:SetRegisterToValue register="12" value="10"/>

			<cpu:CopyRegisterToAddress8 register="12" addressRegister="9"/>

			<cpu:Return/>
		</scope>
	</label>

	<label id="Mailbox" offset="2000b880"/>
	
	<label id="Screen.Enable">
		<cpu:SetRegisterToAddressOf ref="setVideoMode" register="9"/>
		
		<cpu:OrRegisterWithValue register="9" value="1"/>
		
		<cpu:OrRegisterWithValue register="9" value="64" rotateRight="8"/>
		
		<cpu:SetRegisterToAddressOf ref="Mailbox" register="10"/>
		
		<cpu:CopyRegisterToAddress32 register="9" addressRegister="10" offset="32"/>
		
		<!--Wait For Response-->
		<label id="Screen.Enable.WaitForResponse"/>
			   
		<cpu:CopyAddressToRegister32 addressRegister="10" register="9" offset="24"/>
		
		<cpu:TestAndRegisterWithValue register="9" value="64" rotateRight="8"/>
		
		<cpu:Jump ref="Screen.Enable.WaitForResponse" condition="NotEqual"/>
		
		<!--Verify Channel-->
		<cpu:CopyAddressToRegister32 addressRegister="10" register="9"/>
		
		<cpu:AndRegisterWithValue register="9" value="15"/>
		
		<cpu:TestExclusiveOrRegisterWithValue register="9" value="1"/>
		
		<cpu:Jump ref="Screen.Enable.WaitForResponse" condition="NotEqual"/>
		
		<cpu:Return/>
	</label>

	<label id="Screen.Clear">
		<cpu:SetRegisterToValue register="9" value="255"/>
		<cpu:OrRegisterWithValue register="9" value="255" rotateRight="8"/>
		<cpu:OrRegisterWithValue register="9" value="255" rotateRight="16"/>
		<cpu:OrRegisterWithValue register="9" value="255" rotateRight="24"/>
		
		<cpu:SetRegisterToAddressOf ref="frameBuffer" register="10"/>
		
		<cpu:CopyAddressToRegister32 addressRegister="10" register="10"/>
		
		<cpu:SetRegisterToValue register="11" value="0"/>
		<cpu:OrRegisterWithValue register="11" value="0" rotateRight="8"/>
		<cpu:OrRegisterWithValue register="11" value="15" rotateRight="16"/>
		<cpu:OrRegisterWithValue register="11" value="240" rotateRight="24"/>
	
		<label id="Screen.Clear.Loop"/>
	
		<cpu:CopyRegisterToAddress32 register="9" addressRegister="10"/>
		
		<cpu:AddValueToRegister value="4" register="10"/>
		
		<cpu:SubtractValueFromRegister value="1" register="11" setFlags="true"/>
		
		<cpu:Jump ref="Screen.Clear.Loop" condition="NotEqual"/>
	
		<cpu:Return/>
	</label>

	<var:string id="message">OZone v1.0 (ARM v6)</var:string>

	<align bytes="16"/>

	<label id="setVideoMode"/>
	<!--Physical Width-->
	<int>1360</int>
	<!--<int>1920</int>-->
	<!--Physical Height-->
	<int>768</int>
	<!--<int>1080</int>-->
	<!--Virtual Width-->
	<int>1360</int>
	<!--<int>1920</int>-->
	<!--Virtual Height-->
	<int>768</int>
	<!--<int>1080</int>-->
	<!--Stride (out)-->
	<label id="stride" export="Screen.Stride"/>
	<int>0</int>
	<!--Depth-->
	<int>32</int>
	<!--X-->
	<int>0</int>
	<!--Y-->
	<int>0</int>
	<!--Address (out)-->
	<label id="frameBuffer" export="Screen.FrameBuffer"/>
	<int>0</int>
	<!--Length (out)-->
	<int>0</int>
</scope>