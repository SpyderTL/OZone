<?xml version="1.0" encoding="utf-8" ?>

<scope
	xmlns="http://metalx.org/Program"
	xmlns:cpu="http://metalx.org/Intel/80286/Operators"
	xmlns:op="http://metalx.org/Intel/80286/Operands"
	xmlns:seg="http://metalx.org/Intel/80286/Segments"
	xmlns:math="http://metalx.org/Intel/80286/Math"
	xmlns:logic="http://metalx.org/Intel/80286/Logic"
	xmlns:imm="http://metalx.org/Intel/80286/Immediate"
	xmlns:shift="http://metalx.org/Intel/80286/Shift"
	xmlns:con="http://metalx.org/i286/Functions/Console"
	xmlns:int="http://metalx.org/Pc/Bios/Functions"
	xmlns:vid="http://metalx.org/Pc/Bios/Video"
	xmlns:key="http://metalx.org/Pc/Bios/Keyboard"
	xmlns:asc="http://metalx.org/Ansi/Ascii"
	xmlns:pwr="http://metalx.org/Pc/Vesa/Power"
	xmlns:opl="http://metalx.org/Yamaha/Opl2/Registers">

	<!--Switch to 320x200x256-->
	<cpu:CopyImmediateToAX/>
	<hex>0013</hex>

	<cpu:CallImmediate8Interrupt/>
	<int:VideoFunctions/>
	
	<!--Unlock VGA Registers-->
	<cpu:CopyImmediateToDX/>
	<hex>03d4</hex>

	<cpu:CopyImmediateToAL/>
	<hex>11</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:ReadFromDXPortToAL/>

	<cpu:AndALWithImmediate/>
	<binary>01111111</binary>

	<cpu:CopyRegisterToOperand8/>
	<op:AL-BLRegister/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>11</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyRegisterToOperand8/>
	<op:BL-ALRegister/>

	<cpu:WriteALToDXPort/>

	<!--Switch to 256x256x256-->
	<cpu:CopyImmediateToDX/>
	<hex>03d4</hex>

	<cpu:CopyImmediateToAL/>
	<hex>00</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>5f</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>01</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>3f</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>02</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>40</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>03</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>82</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>04</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>4e</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>05</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>9a</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>06</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>23</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>07</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>b2</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>08</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>00</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>09</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>61</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>10</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>0a</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>11</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>ac</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>12</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>ff</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>13</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>20</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>14</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>40</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>15</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>07</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>16</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>17</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>17</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>a3</hex>

	<cpu:WriteALToDXPort/>

	<cpu:CopyImmediateToDX/>
	<hex>03c4</hex>

	<cpu:CopyImmediateToAL/>
	<hex>01</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>01</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>04</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>0e</hex>

	<cpu:WriteALToDXPort/>

	<cpu:CopyImmediateToDX/>
	<hex>03ce</hex>

	<cpu:CopyImmediateToAL/>
	<hex>05</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>40</hex>

	<cpu:WriteALToDXPort/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>06</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>05</hex>

	<cpu:WriteALToDXPort/>

	<cpu:CopyImmediateToDX/>
	<hex>03c0</hex>

	<cpu:CopyImmediateToAL/>
	<hex>10</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>41</hex>

	<cpu:WriteALToDXPort/>

	<!--Lock VGA Registers-->
	<cpu:CopyImmediateToDX/>
	<hex>03d4</hex>

	<cpu:CopyImmediateToAL/>
	<hex>11</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:ReadFromDXPortToAL/>

	<cpu:OrALWithImmediate/>
	<binary>10000000</binary>

	<cpu:CopyRegisterToOperand8/>
	<op:AL-BLRegister/>

	<cpu:DecrementDX/>

	<cpu:CopyImmediateToAL/>
	<hex>11</hex>

	<cpu:WriteALToDXPort/>

	<cpu:IncrementDX/>

	<cpu:CopyRegisterToOperand8/>
	<op:BL-ALRegister/>

	<cpu:WriteALToDXPort/>

	<cpu:PushImmediateToStack16/>
	<hex>a000</hex>

	<cpu:PullESFromStack/>
	
	<!--Draw line-->
	<cpu:CopyImmediateToCX/>
	<short>256</short>

	<cpu:CopyImmediateToDI/>
	<short>0</short>

	<cpu:CopyImmediateToAL/>
	<byte>0</byte>

	<cpu:CopyImmediateToBX/>
	<hex>0100</hex>

	<label id="drawLine"/>

	<cpu:CopyALToDIAddressAndIncrementDI/>

	<cpu:AddRegisterToOperand16/>
	<op:BX-DIRegister/>

	<cpu:IncrementAX/>

	<cpu:AndAXWithImmediate/>
	<hex>00ff</hex>

	<cpu:LoopToRelative8/>
	<addressOf ref="drawLine" type="Relative8"/>

	<label id="loop"/>

	<!--MSDOS: Check For Keyboard Input-->
	<cpu:CopyImmediateToAX/>
	<hex>0b00</hex>

	<cpu:CallImmediate8Interrupt/>
	<hex>21</hex>

	<cpu:CompareALToImmediate/>
	<hex>00</hex>

	<cpu:BranchToRelativeIfNotEqual8/>
	<addressOf ref="exit" type="Relative8"/>
	
	<!--Wait for VSync-->
	<!--<cpu:CallRelative16/>
	<addressOf ref="waitForVSync" type="Relative16"/>

	<cpu:CopyImmediateToDI/>
	<hex>0000</hex>

	<cpu:Operand32/>
	<cpu:CopyImmediateToAX/>
	<hex>1010</hex>
	<hex>1010</hex>

	<cpu:CopyImmediateToCX/>
	<short>16384</short>

	<cpu:Repeat/>
	<cpu:Operand32/>
	<cpu:CopyAXToDIAddressAndIncrementDI/>

	<cpu:CallRelative16/>
	<addressOf ref="waitForVSync" type="Relative16"/>

	<cpu:CopyImmediateToDI/>
	<hex>0000</hex>

	<cpu:Operand32/>
	<cpu:CopyImmediateToAX/>
	<hex>1f1f</hex>
	<hex>1f1f</hex>

	<cpu:CopyImmediateToCX/>
	<short>16384</short>

	<cpu:Repeat/>
	<cpu:Operand32/>
	<cpu:CopyAXToDIAddressAndIncrementDI/>-->

	<cpu:JumpToRelative8/>
	<addressOf ref="loop" type="Relative8"/>

	<label id="wait"/>

	<cpu:JumpToRelative8/>
	<addressOf ref="wait" type="Relative8"/>

	<label id="exit"/>

	<!--Switch to 40x25x16-->
	<cpu:CopyImmediateToAX/>
	<hex>0003</hex>

	<cpu:CallImmediate8Interrupt/>
	<int:VideoFunctions/>

	<!--Return To MS-DOS-->
	<cpu:CallImmediate8Interrupt/>
	<hex>20</hex>

	<label id="waitForVSync">
		<cpu:CopyImmediateToDX/>
		<hex>03da</hex>

		<label id="waitForVSyncOff"/>

		<cpu:ReadFromDXPortToAL/>

		<cpu:TestALWithImmediate/>
		<binary>00001000</binary>

		<cpu:BranchToRelativeIfNotZero8/>
		<addressOf ref="waitForVSyncOff" type="Relative8"/>

		<label id="waitForVSyncOn"/>

		<cpu:ReadFromDXPortToAL/>

		<cpu:TestALWithImmediate/>
		<binary>00001000</binary>

		<cpu:BranchToRelativeIfZero8/>
		<addressOf ref="waitForVSyncOn" type="Relative8"/>

		<cpu:ReturnToNearCaller/>
	</label>
</scope>

