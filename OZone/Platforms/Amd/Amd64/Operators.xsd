<?xml version="1.0" encoding="utf-8"?>
<xsd:schema targetNamespace="http://metalx.org/Amd/Amd64/Operators" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:element name="AddRegisterToOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;00&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddRegisterToOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;01&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddOperandToRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;02&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddOperandToRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;03&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddImmediateToAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;04&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddImmediateToAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;05&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushESToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;06&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullESFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;07&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrOperandWithRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;08&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrOperandWithRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;09&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrRegisterWithOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;0A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrRegisterWithOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;0B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrALWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;0C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OrAXWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;0D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushCSToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;0E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddRegisterToOperandWithCarry8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;10&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddRegisterToOperandWithCarry">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;11&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddOperandToRegisterWithCarry8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;12&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddOperandToRegisterWithCarry">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;13&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddImmediateToALWithCarry">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;14&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AddImmediateToAXWithCarry">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;15&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushSSToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;16&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullSSFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;17&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractRegisterFromOperandWithBorrow8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;18&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractRegisterFromOperandWithBorrow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;19&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractOperandFromRegisterWithBorrow8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;1A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractOperandFromRegisterWithBorrow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;1B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractImmediateFromALWithBorrow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;1C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractImmediateFromAXWithBorrow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;1D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushDSToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;1E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullDSFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;1F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndOperandWithRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;20&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndOperandWithRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;21&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndRegisterWithOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;22&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndRegisterWithOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;23&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndALWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;24&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AndAXWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;25&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractRegisterFromOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;28&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractRegisterFromOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;29&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractOperandFromRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;2A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractOperandFromRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;2B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractImmediateFromAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;2C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SubtractImmediateFromAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;2D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrOperandWithRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;30&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrOperandWithRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;31&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrRegisterWithOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;32&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrRegisterWithOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;33&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrALWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;34&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveOrAXWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;35&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareOperandToRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;38&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareOperandToRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;39&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareRegisterToOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;3A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareRegisterToOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;3B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareALToImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;3C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareAXToImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;3D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefault">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;40&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultBase">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;41&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;42&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultBaseIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;43&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;44&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultRegisterBase">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;45&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultRegisterIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;46&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="OperandDefaultRegisterBaseIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;47&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;48&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64Base">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;49&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64Index">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;4A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64BaseIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;4B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64Register">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;4C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64RegisterBase">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;4D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64RegisterIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;4E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand64RegisterBaseIndex">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;4F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushAXToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;50&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushCXToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;51&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushDXToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;52&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushBXToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;53&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushSPToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;54&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushBPToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;55&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushSIToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;56&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushDIToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;57&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullAXFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;58&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullCXFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;59&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullDXFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;5A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullBXFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;5B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullSPFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;5C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullBPFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;5D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullSIFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;5E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullDIFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;5F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushAllRegistersToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;60&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullAllRegistersFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;61&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CheckBoundaries">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;62&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AdjustPrivilegeLevel">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;63&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushImmediateToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;68&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetRegisterToOperandMultipliedByImmediateSigned">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;69&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushImmediateToStack8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;6A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetRegisterToOperandMultipliedByImmediateSigned8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;6B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadFromDXPortToDIAddressAndIncrementDI8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;6C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadFromDXPortToDIAddressAndIncrementDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;6D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WriteSIAddressToDXPortAndIncrementSI8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;6E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WriteSIAddressToDXPortAndIncrementSI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;6F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfOverflow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;70&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotOverflow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;71&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfBelow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;72&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotAboveOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;72&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfCarry">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;72&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfAboveOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;73&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotBelow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;73&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotCarry">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;73&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfZero">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;74&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;74&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotZero">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;75&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;75&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfBelowOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;76&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotAbove">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;76&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfAbove">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;77&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotBelowOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;77&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNegative">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;78&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfPositive">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;79&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfEven">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfOdd">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfLess">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotGreaterOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotLess">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfGreaterOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfLessOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotGreater">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfNotLessOrEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelative8IfGreater">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;7F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="TestOperandWithRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;84&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="TestOperandWithRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;85&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeOperandWithRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;86&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeOperandWithRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;87&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyRegisterToOperand8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;88&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyRegisterToOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;89&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyOperandToRegister8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;8A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyOperandToRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;8B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopySegmentRegisterToOperand">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;8C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetRegisterToEffectiveAddress">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;8D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyOperandToSegmentRegister">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;8E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="NoOperation">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;90&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeCXWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;91&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeDXWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;92&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeBXWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;93&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeSPWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;94&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeBPWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;95&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeSIWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;96&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExchangeDIWithAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;97&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExpandALToAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;98&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExpandAXToDXAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;99&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallImmediatePointer">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;9A&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="HandleFloatingPointExceptions">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;9B&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PushFlagsToStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;9C&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullFlagsFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;9D&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyAHToFlags">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;9E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyFlagsToAH">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;9F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyAbsoluteMemoryToAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyAbsoluteMemoryToAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A1&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyALToAbsoluteMemory">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A2&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyAXToAbsoluteMemory">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopySIAddressToDIAddressAndIncrementSIAndDI8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A4&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopySIAddressToDIAddressAndIncrementSIAndDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A5&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareSIAddressToDIAddressAndIncrementSIAndDI8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A6&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareSIAddressToDIAddressAndIncrementSIAndDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A7&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="TestALWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A8&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="TestAXWithImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;A9&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyALToDIAddressAndIncrementDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;AA&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyAXToDIAddressAndIncrementDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;AB&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopySIAddressToALAndIncrementSI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;AC&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopySIAddressToAXAndIncrementSI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;AD&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareALToDIAddressAndIncrementDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;AE&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CompareAXToDIAddressAndIncrementDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;AF&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToCL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B1&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToDL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B2&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToBL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToAH">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B4&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToCH">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B5&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToDH">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B6&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToBH">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B7&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B8&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToCX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;B9&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToDX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;BA&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToBX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;BB&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToSP">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;BC&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToBP">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;BD&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToSI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;BE&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToDI">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;BF&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReturnToNearCallerAndPullImmediate">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C2&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReturnToNearCaller">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetESAndRegisterToFarPointer">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C4&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetDSAndRegisterToFarPointer">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C5&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="EnterStackFrame">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C8&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LeaveStackFrame">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C9&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReturnToFarCallerAndPullImmediateFromStack">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;CA&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReturnToFarCaller">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;CB&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallDebuggerInterrupt">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;CC&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallImmediate8Interrupt">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;CD&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallInterruptIfOverflow">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;CE&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReturnFromInterrupt">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;CF&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AdjustAXAfterMultiplyToBaseImmediate8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D4&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="AdjustAXBeforeDivideToBaseImmediate8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D5&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyBXAddressPlusALToAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D7&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LoopToRelativeWhileNotEqual8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LoopToRelativeWhileNotZero8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LoopToRelativeWhileEqual8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E1&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LoopToRelativeWhileZero8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E1&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LoopToRelative8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E2&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="BranchToRelativeIfCXIsZero">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadFromImmediate8PortToAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E4&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadFromImmediate8PortToAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E5&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WriteALToImmediate8Port">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E6&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WriteAXToImmediate8Port">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E7&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CallRelative">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E8&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="JumpToRelative">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;E9&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="JumpToImmediatePointer">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;EA&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="JumpToRelative8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;EB&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadFromDXPortToAL">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;EC&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ReadFromDXPortToAX">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;ED&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WriteALToDXPort">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;EE&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WriteAXToDXPort">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;EF&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="WaitForInterrupt">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F4&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ComplementCarryFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F5&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ClearCarryFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F8&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetCarryFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F9&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ClearInterruptFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FA&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetInterruptFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FB&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ClearDirectionFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FC&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SetDirectionFlag">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FD&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SegmentES">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;26&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SegmentSS">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;36&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SegmentCS">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;2E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="SegmentDS">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;3E&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand32">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;66&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Operand16">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;66&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Address32">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;67&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Address16">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;67&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExclusiveLock">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="RepeatWhileNotEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F2&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="Repeat">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="RepeatWhileEqual">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ExtendedOperator">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;0F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="MathImmediateToOperandFunction8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;80&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="MathImmediateToOperandFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;81&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="MathImmediate8ToOperandFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;83&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ArithmeticAXOperandFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F6&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ArithmeticDXAXOperandFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;F7&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftRegisterByImmediateFunction8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftRegisterByImmediate8Function">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C1&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftRegisterByOneFunction8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D0&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftRegisterByOneFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D1&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftRegisterByCLFunction8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D2&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="ShiftRegisterByCLFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;D3&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToOperandFunction8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C6&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="CopyImmediateToOperandFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;C7&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="PullOperandFromStackFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;8F&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="IncrementFunction8">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FE&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="IncrementFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FF&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
	<xsd:element name="LogicFunction">
		<xsd:annotation>
			<xsd:documentation>
				&lt;hex&gt;FF&lt;/hex&gt;
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType />
	</xsd:element>
</xsd:schema>