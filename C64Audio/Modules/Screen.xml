<?xml version="1.0" encoding="utf-8"?>

<scope
	xmlns="http://metalx.org/Program"
	xmlns:cpu="http://metalx.org/Mos/6502/Operators"
	xmlns:vid="http://metalx.org/Commodore64/Video"
	xmlns:color="http://metalx.org/Commodore64/Color"
	xmlns:ascii="http://metalx.org/Ansi/Ascii"
	xmlns:petscii="http://metalx.org/Commodore64/Petscii"
	xmlns:vic="http://metalx.org/Commodore64/Vic"
	xmlns:var="http://metalx.org/Variable">
	
	<!--Define Memory Address Labels-->
	<vid:BorderColor id="borderColor"/>
	<vid:BackgroundColor0 id="backgroundColor"/>

	<label id="Clear" export="Screen.Clear">
		<scope>
			<cpu:CopyImmediate8ToAccumulator/>
			<vic:Space/>

			<cpu:CopyImmediate8ToXIndex/>
			<hex>00</hex>

			<label id="nextCharacter"/>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>0400</hex>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>0500</hex>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>0600</hex>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>0700</hex>

			<cpu:IncrementXIndex/>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="nextCharacter" type="Relative8"/>

			<!--Set Foreground Color-->
			<cpu:CopyImmediate8ToAccumulator/>
			<color:LightGray/>

			<label id="nextCharacter2"/>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>d800</hex>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>d900</hex>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>da00</hex>

			<cpu:CopyAccumulatorToImmediate16PlusXIndexAddress/>
			<hex>db00</hex>

			<cpu:IncrementXIndex/>

			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="nextCharacter2" type="Relative8"/>

			<cpu:ReturnFromSubroutine/>
		</scope>
	</label>

	<label id="DrawHexadecimal" export="Screen.DrawHexadecimal">
		<scope>
			<!--Digit 1-->
			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="Hexadecimal.Value" type="Absolute16" offset="0"/>

			<cpu:ShiftAccumulatorRight/>
			<cpu:ShiftAccumulatorRight/>
			<cpu:ShiftAccumulatorRight/>
			<cpu:ShiftAccumulatorRight/>

			<cpu:CopyAccumulatorToXIndex/>

			<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
			<addressOf ref="Hexadecimal.Digits" type="Absolute16"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

			<!--Digit 2-->
			<cpu:CopyImmediate16AddressToAccumulator/>
			<addressOf ref="Hexadecimal.Value" type="Absolute16" offset="0"/>

			<cpu:AndAccumulatorWithImmediate8/>
			<hex>0f</hex>

			<cpu:CopyAccumulatorToXIndex/>

			<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
			<addressOf ref="Hexadecimal.Digits" type="Absolute16"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

			<cpu:ReturnFromSubroutine/>
		</scope>
	</label>

	<label id="DrawString" export="Screen.DrawString">
		<scope>
			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryReader.ReadByte" type="Absolute16"/>

			<cpu:CopyAccumulatorToXIndex/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryReader.ReadByte" type="Absolute16"/>
			
			<label id="forEachCharacter"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryReader.ReadByte" type="Absolute16"/>

			<cpu:CopyAccumulatorToYIndex/>
			
			<cpu:CopyImmediate16PlusYIndexAddressToAccumulator/>
			<addressOf ref="characters" type="Absolute16"/>

			<cpu:CallImmediate16Address/>
			<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

			<cpu:DecrementXIndex/>
			
			<cpu:BranchToRelative8IfNotZero/>
			<addressOf ref="forEachCharacter" type="Relative8"/>
			
			<cpu:ReturnFromSubroutine/>
		</scope>
	</label>

	<label id="characters">
		<!--00-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--10-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--20-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--30-->
		<vic:Zero/>
		<vic:One/>
		<vic:Two/>
		<vic:Three/>
		<vic:Four/>
		<vic:Five/>
		<vic:Six/>
		<vic:Seven/>

		<vic:Eight/>
		<vic:Nine/>
		<vic:Colon/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--40-->
		<vic:At/>
		<vic:A/>
		<vic:B/>
		<vic:C/>
		<vic:D/>
		<vic:E/>
		<vic:F/>
		<vic:G/>

		<vic:H/>
		<vic:I/>
		<vic:J/>
		<vic:K/>
		<vic:L/>
		<vic:M/>
		<vic:N/>
		<vic:O/>

		<!--50-->
		<vic:P/>
		<vic:Q/>
		<vic:R/>
		<vic:S/>
		<vic:T/>
		<vic:U/>
		<vic:V/>
		<vic:W/>

		<vic:X/>
		<vic:Y/>
		<vic:Z/>
		<vic:LeftBracket/>
		<vic:Slash/>
		<vic:RightBracket/>
		<vic:Space/>
		<vic:Space/>

		<!--60-->
		<vic:Apostrophe/>
		<vic:A/>
		<vic:B/>
		<vic:C/>
		<vic:D/>
		<vic:E/>
		<vic:F/>
		<vic:G/>

		<vic:H/>
		<vic:I/>
		<vic:J/>
		<vic:K/>
		<vic:L/>
		<vic:M/>
		<vic:N/>
		<vic:O/>

		<!--70-->
		<vic:P/>
		<vic:Q/>
		<vic:R/>
		<vic:S/>
		<vic:T/>
		<vic:U/>
		<vic:V/>
		<vic:W/>

		<vic:X/>
		<vic:Y/>
		<vic:Z/>
		<vic:LeftParenthesis/>
		<vic:Slash/>
		<vic:RightParenthesis/>
		<vic:Space/>
		<vic:Space/>

		<!--80-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--90-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--A0-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--B0-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--C0-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--D0-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--E0-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<!--F0-->
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>

		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
		<vic:Space/>
	</label>
</scope>