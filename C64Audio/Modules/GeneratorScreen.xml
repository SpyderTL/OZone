<?xml version="1.0" encoding="utf-8"?>

<scope
	xmlns="http://metalx.org/Program"
	xmlns:cpu="http://metalx.org/Mos/6502/Operators"
	xmlns:vic="http://metalx.org/Commodore64/Vic"
	xmlns:vid="http://metalx.org/Commodore64/Video"
	xmlns:color="http://metalx.org/Commodore64/Color"
	xmlns:ascii="http://metalx.org/Ansi/Ascii"
	xmlns:petscii="http://metalx.org/Commodore64/Petscii"
	xmlns:kernel="http://metalx.org/Commodore64/Kernel"
	xmlns:var="http://metalx.org/Variable">

	<!--Define Memory Address Labels-->
	<kernel:ReadCharacter id="readCharacter"/>
	<vid:BorderColor id="borderColor"/>
	<vid:BackgroundColor0 id="backgroundColor"/>

	<label id="Selected"/>
	<byte>0</byte>

	<label id="Show" export="GeneratorScreen.Show">
		<!--Clear Screen-->
		<!--<cpu:CopyImmediate8ToAccumulator/>
		<color:Black/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="borderColor" type="Absolute16"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="backgroundColor" type="Absolute16"/>-->

		<cpu:CallImmediate16Address/>
		<addressOf ref="Screen.Clear" type="Absolute16"/>
		
		<!--Draw Labels-->
		<cpu:CopyImmediate8ToAccumulator/>
		<addressOf ref="labels" type="Absolute8"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="MemoryReader.Position" type="Absolute16" offset="0"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<addressOf ref="labels" type="Absolute16High8"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="MemoryReader.Position" type="Absolute16" offset="1"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>00</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute16" offset="0"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<hex>04</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute16" offset="1"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="Screen.DrawString" type="Absolute16"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<label id="Update" export="GeneratorScreen.Update">
		<!--Get Key Events-->
		<cpu:CallImmediate16Address/>
		<addressOf ref="readCharacter" type="Absolute16"/>

		<cpu:CompareAccumulatorToImmediate8/>
		<hex>00</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="findEvent" type="Relative8"/>
		
		<cpu:JumpToImmediate16Address/>
		<addressOf ref="noEvents" type="Absolute16"/>

		<label id="findEvent"/>
		
		<!--Reset Highlight-->
		<cpu:PushAccumulatorToStack/>
		
		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:ShiftAccumulatorLeft/>

		<cpu:CopyAccumulatorToXIndex/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="screenColors" type="Absolute16" offset="0"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="0"/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="screenColors" type="Absolute16" offset="1"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="1"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<color:LightGray/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

		<cpu:PullAccumulatorFromStack/>
		
		<!--Check Up Key-->
		<cpu:CompareAccumulatorToImmediate8/>
		<hex>91</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notUp" type="Relative8"/>

		<!--<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>
		
		<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>
		
		<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>
		
		<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>-->
		
		<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="highlight" type="Absolute16"/>

		<label id="notUp"/>

		<!--Check Down Key-->
		<cpu:CompareAccumulatorToImmediate8/>
		<hex>11</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notDown" type="Relative8"/>

		<!--<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>-->

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="highlight" type="Absolute16"/>

		<label id="notDown"/>

		<!--Check Left Key-->
		<cpu:CompareAccumulatorToImmediate8/>
		<hex>9D</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notLeft" type="Relative8"/>

		<cpu:DecrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="highlight" type="Absolute16"/>

		<label id="notLeft"/>

		<!--Check Right Key-->
		<cpu:CompareAccumulatorToImmediate8/>
		<hex>1D</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notRight" type="Relative8"/>

		<cpu:IncrementImmediate16Address/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="highlight" type="Absolute16"/>

		<label id="notRight"/>

		<!--Check Plus Key-->
		<cpu:CompareAccumulatorToImmediate8/>
		<hex>2B</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notPlus" type="Relative8"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="Selected" type="Absolute16"/>
		
		<cpu:ShiftAccumulatorLeft/>
		
		<cpu:CopyAccumulatorToXIndex/>
		
		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="registers" type="Absolute16" offset="0"/>
		
		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="0"/>
		
		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="registers" type="Absolute16" offset="1"/>
		
		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="1"/>
		
		<cpu:CopyImmediate8ToYIndex/>
		<byte>0</byte>
		
		<cpu:CopyImmediate8PointerPlusYIndexAddressToAccumulator/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8"/>
		
		<cpu:ClearCarryFlag/>
		
		<cpu:AddImmediate8ToAccumulator/>
		<byte>1</byte>
		
		<cpu:CopyAccumulatorToImmediate8PointerPlusYIndexAddress/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="highlight" type="Absolute16"/>

		<label id="notPlus"/>

		<!--Check Minus Key-->
		<cpu:CompareAccumulatorToImmediate8/>
		<hex>2D</hex>

		<cpu:BranchToRelative8IfNotEqual/>
		<addressOf ref="notMinus" type="Relative8"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="Selected" type="Absolute16"/>
		
		<cpu:ShiftAccumulatorLeft/>
		
		<cpu:CopyAccumulatorToXIndex/>
		
		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="registers" type="Absolute16" offset="0"/>
		
		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="0"/>
		
		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="registers" type="Absolute16" offset="1"/>
		
		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="1"/>
		
		<cpu:CopyImmediate8ToYIndex/>
		<byte>0</byte>
		
		<cpu:SetCarryFlag/>
		
		<cpu:CopyImmediate8PointerPlusYIndexAddressToAccumulator/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8"/>
		
		<cpu:SubtractImmediate8FromAccumulator/>
		<byte>1</byte>
		
		<cpu:CopyAccumulatorToImmediate8PointerPlusYIndexAddress/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="highlight" type="Absolute16"/>

		<label id="notMinus"/>

		<!--Highlight Selected-->
		<label id="highlight"/>

		<cpu:CopyImmediate16AddressToAccumulator/>
		<addressOf ref="Selected" type="Absolute16"/>

		<cpu:ShiftAccumulatorLeft/>

		<cpu:CopyAccumulatorToXIndex/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="screenColors" type="Absolute16" offset="0"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="0"/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="screenColors" type="Absolute16" offset="1"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="1"/>

		<cpu:CopyImmediate8ToAccumulator/>
		<color:Yellow/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="MemoryWriter.WriteByte" type="Absolute16"/>

		<label id="noEvents"/>

		<!--Get Pressed Key-->
		<cpu:CopyImmediate8AddressToAccumulator/>
		<hex>CB</hex>

		<cpu:CompareAccumulatorToImmediate8/>
		<hex>40</hex>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="notPressed" type="Relative8"/>

		<!--Get Note-->
		<cpu:CopyAccumulatorToXIndex/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="keyboardNotes" type="Absolute16"/>

		<cpu:CompareAccumulatorToImmediate8/>
		<hex>ff</hex>

		<cpu:BranchToRelative8IfEqual/>
		<addressOf ref="draw" type="Relative8"/>

		<!--Set Channel 1 Frequency-->
		<cpu:ClearCarryFlag/>

		<cpu:AddImmediate8ToAccumulator/>
		<byte>16</byte>

		<cpu:ShiftAccumulatorLeft/>

		<cpu:CopyAccumulatorToXIndex/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="Sid.Frequency" type="Absolute16" offset="0"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="SoundGenerator.Registers" type="Absolute16" offset="0"/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="Sid.Frequency" type="Absolute16" offset="1"/>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="SoundGenerator.Registers" type="Absolute16" offset="1"/>

		<!--Enable Channel 1-->
		<cpu:CopyImmediate8ToAccumulator/>
		<byte>1</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="SoundGenerator.Registers" type="Absolute16" offset="11"/>

		<cpu:JumpToImmediate16Address/>
		<addressOf ref="done" type="Absolute16"/>

		<label id="notPressed"/>

		<!--Disable Channel 1-->
		<cpu:CopyImmediate8ToAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="SoundGenerator.Registers" type="Absolute16" offset="11"/>

		<label id="done"/>
		
		<!--Draw Screen-->
		<label id="draw"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="drawScreen" type="Absolute16"/>

		<cpu:ReturnFromSubroutine/>
	</label>
	
	<label id="drawScreen">
		<cpu:CopyImmediate8ToAccumulator/>
		<byte>58</byte>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>02</hex>

		<cpu:CopyImmediate8ToAccumulator/>
		<byte>0</byte>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>03</hex>

		<label id="forEachRegister"/>

		<cpu:CopyImmediate8AddressToXIndex/>
		<hex>03</hex>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="screenCharacters" type="Absolute16" offset="0"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="0"/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="screenCharacters" type="Absolute16" offset="1"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<addressOf ref="MemoryWriter.Position" type="Absolute8" offset="1"/>

		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="registers" type="Absolute16" offset="0"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>04</hex>
		
		<cpu:CopyImmediate16PlusXIndexAddressToAccumulator/>
		<addressOf ref="registers" type="Absolute16" offset="1"/>

		<cpu:CopyAccumulatorToImmediate8Address/>
		<hex>05</hex>

		<cpu:CopyImmediate8ToYIndex/>
		<byte>0</byte>

		<cpu:CopyImmediate8PointerPlusYIndexAddressToAccumulator/>
		<hex>04</hex>

		<cpu:CopyAccumulatorToImmediate16Address/>
		<addressOf ref="Hexadecimal.Value" type="Absolute16"/>

		<cpu:CallImmediate16Address/>
		<addressOf ref="Screen.DrawHexadecimal" type="Absolute16"/>

		<cpu:IncrementImmediate8Address/>
		<hex>03</hex>

		<cpu:IncrementImmediate8Address/>
		<hex>03</hex>

		<cpu:DecrementImmediate8Address/>
		<hex>02</hex>

		<cpu:BranchToRelative8IfNotZero/>
		<addressOf ref="forEachRegister" type="Relative8"/>

		<cpu:ReturnFromSubroutine/>
	</label>

	<var:string id="labels">Reg    Ch1  Ch2  Ch3</var:string>

	<label id="screenCharacters">
		<!--Frequency-->
		<hex>0456</hex>
		<hex>0458</hex>
		
		<hex>045B</hex>
		<hex>045D</hex>
		
		<hex>0460</hex>
		<hex>0462</hex>

		<!--Duty Cycle-->
		<hex>047E</hex>
		<hex>0480</hex>
		
		<hex>0483</hex>
		<hex>0485</hex>
		
		<hex>0488</hex>
		<hex>048A</hex>

		<!--Pulse Enable-->
		<hex>04A8</hex>
		<hex>04AD</hex>
		<hex>04B2</hex>
		
		<!--Noise Enable-->
		<hex>04D0</hex>
		<hex>04D5</hex>
		<hex>04DA</hex>

		<!--Triangle Enable-->
		<hex>04F8</hex>
		<hex>04FD</hex>
		<hex>0502</hex>

		<!--Sawtooth Enable-->
		<hex>0520</hex>
		<hex>0525</hex>
		<hex>052A</hex>

		<!--Ring Modulation-->
		<hex>0548</hex>
		<hex>054D</hex>
		<hex>0552</hex>
		
		<!--Reset-->
		<hex>0570</hex>
		<hex>0575</hex>
		<hex>057A</hex>

		<!--Enable-->
		<hex>0598</hex>
		<hex>059D</hex>
		<hex>05A2</hex>

		<!--Synchronize-->
		<hex>05C0</hex>
		<hex>05C5</hex>
		<hex>05CA</hex>

		<!--Attack Duration-->
		<hex>05E8</hex>
		<hex>05ED</hex>
		<hex>05F2</hex>
		
		<!--Decay Duration-->
		<hex>0610</hex>
		<hex>0615</hex>
		<hex>061A</hex>

		<!--Sustain Level-->
		<hex>0638</hex>
		<hex>063D</hex>
		<hex>0642</hex>

		<!--Release Duration-->
		<hex>0660</hex>
		<hex>0665</hex>
		<hex>066A</hex>
		
		<!--Channel Filter Enable-->
		<hex>0688</hex>
		<hex>068D</hex>
		<hex>0692</hex>

		<!--Filter Cutoff-->
		<hex>06AE</hex>
		<hex>06B0</hex>

		<!--Filter Resonance-->
		<hex>06D8</hex>

		<!--High Pass Filter-->
		<hex>0700</hex>

		<!--Band Pass Filter-->
		<hex>0705</hex>

		<!--Low Pass Filter-->
		<hex>070A</hex>

		<!--Volume-->
		<hex>0728</hex>
	</label>

	<label id="screenColors">
		<!--Frequency-->
		<hex>D856</hex>
		<hex>D858</hex>
		
		<hex>D85B</hex>
		<hex>D85D</hex>
		
		<hex>D860</hex>
		<hex>D862</hex>

		<!--Duty Cycle-->
		<hex>D87E</hex>
		<hex>D880</hex>
		
		<hex>D883</hex>
		<hex>D885</hex>
		
		<hex>D888</hex>
		<hex>D88A</hex>

		<!--Pulse Enable-->
		<hex>D8A8</hex>
		<hex>D8AD</hex>
		<hex>D8B2</hex>

		<!--Noise Enable-->
		<hex>D8D0</hex>
		<hex>D8D5</hex>
		<hex>D8DA</hex>

		<!--Triangle Enable-->
		<hex>D8F8</hex>
		<hex>D8FD</hex>
		<hex>D902</hex>

		<!--Sawtooth Enable-->
		<hex>D920</hex>
		<hex>D925</hex>
		<hex>D92A</hex>

		<!--Ring Modulation-->
		<hex>D948</hex>
		<hex>D94D</hex>
		<hex>D952</hex>
		
		<!--Reset-->
		<hex>D970</hex>
		<hex>D975</hex>
		<hex>D97A</hex>

		<!--Enable-->
		<hex>D998</hex>
		<hex>D99D</hex>
		<hex>D9A2</hex>

		<!--Synchronize-->
		<hex>D9C0</hex>
		<hex>D9C5</hex>
		<hex>D9CA</hex>

		<!--Attack Duration-->
		<hex>D9E8</hex>
		<hex>D9ED</hex>
		<hex>D9F2</hex>
		
		<!--Decay Duration-->
		<hex>DA10</hex>
		<hex>DA15</hex>
		<hex>DA1A</hex>

		<!--Sustain Level-->
		<hex>DA38</hex>
		<hex>DA3D</hex>
		<hex>DA42</hex>

		<!--Release Duration-->
		<hex>DA60</hex>
		<hex>DA65</hex>
		<hex>DA6A</hex>

		<!--Channel Filter Enable-->
		<hex>DA88</hex>
		<hex>DA8D</hex>
		<hex>DA92</hex>

		<!--Filter Cutoff-->
		<hex>DAAE</hex>
		<hex>DAB0</hex>

		<!--Filter Resonance-->
		<hex>DAD8</hex>

		<!--High Pass Filter-->
		<hex>DB00</hex>

		<!--Band Pass Filter-->
		<hex>DB05</hex>

		<!--Low Pass Filter-->
		<hex>DB0A</hex>

		<!--Volume-->
		<hex>DB28</hex>
	</label>

	<label id="registers">
		<!--Frequency-->
		<hex>9E01</hex>
		<hex>9E00</hex>
		
		<hex>9E11</hex>
		<hex>9E10</hex>
		
		<hex>9E21</hex>
		<hex>9E20</hex>

		<!--Duty Cycle-->
		<hex>9E03</hex>
		<hex>9E02</hex>
		
		<hex>9E13</hex>
		<hex>9E12</hex>
		
		<hex>9E23</hex>
		<hex>9E22</hex>

		<!--Pulse Enable-->
		<hex>9E05</hex>
		<hex>9E15</hex>
		<hex>9E25</hex>

		<!--Noise Enable-->
		<hex>9E04</hex>
		<hex>9E14</hex>
		<hex>9E24</hex>
		
		<!--Triangle Enable-->
		<hex>9E07</hex>
		<hex>9E17</hex>
		<hex>9E27</hex>

		<!--Sawtooth Enable-->
		<hex>9E06</hex>
		<hex>9E16</hex>
		<hex>9E26</hex>

		<!--Ring Modulation-->
		<hex>9E09</hex>
		<hex>9E19</hex>
		<hex>9E29</hex>

		<!--Reset-->
		<hex>9E08</hex>
		<hex>9E18</hex>
		<hex>9E28</hex>
		
		<!--Enable-->
		<hex>9E0B</hex>
		<hex>9E1B</hex>
		<hex>9E2B</hex>

		<!--Synchronize-->
		<hex>9E0A</hex>
		<hex>9E1A</hex>
		<hex>9E2A</hex>

		<!--Attack Duration-->
		<hex>9E0C</hex>
		<hex>9E1C</hex>
		<hex>9E2C</hex>

		<!--Decay Duration-->
		<hex>9E0D</hex>
		<hex>9E1D</hex>
		<hex>9E2D</hex>

		<!--Sustain Level-->
		<hex>9E0E</hex>
		<hex>9E1E</hex>
		<hex>9E2E</hex>

		<!--Release Duration-->
		<hex>9E0F</hex>
		<hex>9E1F</hex>
		<hex>9E2F</hex>
		
		<!--Channel Filter Enable-->
		<hex>9E34</hex>
		<hex>9E35</hex>
		<hex>9E36</hex>
		
		<!--Filter Cutoff-->
		<hex>9E31</hex>
		<hex>9E30</hex>
		
		<!--Filter Resonance-->
		<hex>9E32</hex>

		<!--High Pass Filter-->
		<hex>9E38</hex>
		
		<!--Band Pass Filter-->
		<hex>9E39</hex>
		
		<!--Low Pass Filter-->
		<hex>9E3A</hex>
		
		<!--Volume-->
		<hex>9E3B</hex>
	</label>

	<label id="keyboardNotes">
		<!--0x00-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>11</hex>
		<hex>0B</hex>
		<hex>05</hex>
		<hex>12</hex>
		<hex>00</hex>
		<hex>06</hex>
		<hex>0C</hex>
		<hex>00</hex>

		<!--0x10-->
		<hex>13</hex>
		<hex>0D</hex>
		<hex>07</hex>
		<hex>14</hex>
		<hex>02</hex>
		<hex>08</hex>
		<hex>0E</hex>
		<hex>01</hex>

		<hex>15</hex>
		<hex>0F</hex>
		<hex>09</hex>
		<hex>16</hex>
		<hex>04</hex>
		<hex>0A</hex>
		<hex>10</hex>
		<hex>03</hex>

		<!--0x20-->
		<hex>17</hex>
		<hex>11</hex>
		<hex>0B</hex>
		<hex>18</hex>
		<hex>06</hex>
		<hex>0C</hex>
		<hex>12</hex>
		<hex>05</hex>

		<hex>FF</hex>
		<hex>13</hex>
		<hex>0D</hex>
		<hex>FF</hex>
		<hex>08</hex>
		<hex>14</hex>
		<hex>00</hex>
		<hex>07</hex>

		<!--0x30-->
		<hex>00</hex>
		<hex>00</hex>
		<hex>0E</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>09</hex>

		<hex>0F</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>10</hex>
		<hex>00</hex>
		<hex>00</hex>
		<hex>0A</hex>
		<hex>00</hex>

		<!--0x40-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0x50-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0x60-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0x70-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0x80-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0x90-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0xA0-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0xB0-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0xC0-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0xD0-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0xE0-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<!--0xF0-->
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>

		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
		<hex>FF</hex>
	</label>
</scope>